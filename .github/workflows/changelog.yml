name: Generate Changelog

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate_and_commit_changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Generate Changelog
        run: |
          python -c "
import subprocess
import os
import datetime

changelog_file = 'CHANGELOG.md'
new_changelog_content = f'## Changes ({datetime.date.today()})\n\n'

try:
    git_log_command = ['git', 'log', '--pretty=format:* %h - %an (%ad): %s', '--date=short', '-n', '50']
    result = subprocess.run(git_log_command, capture_output=True, text=True, check=True)
    commits = result.stdout.strip().split('\n')
    
    for commit in commits:
        if commit:
            new_changelog_content += f'{commit}\n'

except subprocess.CalledProcessError as e:
    print(f'Error running git log: {e}')
    print(e.stderr)
    exit(1)

existing_full_changelog = ''
if os.path.exists(changelog_file):
    with open(changelog_file, 'r') as f:
        existing_full_changelog = f.read()

if existing_full_changelog.startswith('# Changelog'):
    insert_pos = existing_full_changelog.find('\n\n') + 2
    final_content = existing_full_changelog[:insert_pos] + new_changelog_content + '\n' + existing_full_changelog[insert_pos:]
else:
    final_content = f'# Changelog\n\n{new_changelog_content}\n{existing_full_changelog}'

with open(changelog_file, 'w') as f:
    f.write(final_content)

print(f'Changelog generated and saved to {changelog_file}')
"

      - name: Commit and Push if changes exist
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Fix: Define changelog_file variable in bash context
          changelog_file="CHANGELOG.md"
          git add "$changelog_file"
          
          # Check if there are changes before committing
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore(changelog): Update CHANGELOG.md"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
